-- DarkFusion UI Library
if game.CoreGui:FindFirstChild("DarkFusionUI") then
    game.CoreGui.DarkFusionUI:Destroy()
end

local TweenService = game:GetService("TweenService")

-- UI Elements
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "DarkFusionUI"
gui.ResetOnSpawn = false

-- Loading Screen
local loadingFrame = Instance.new("Frame", gui)
loadingFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
loadingFrame.Size = UDim2.new(1, 0, 1, 0)

local loadingLabel = Instance.new("TextLabel", loadingFrame)
loadingLabel.Text = "Loading DarkFusion Library..."
loadingLabel.TextColor3 = Color3.fromRGB(180, 0, 255)
loadingLabel.BackgroundTransparency = 1
loadingLabel.Size = UDim2.new(1, 0, 1, 0)
loadingLabel.Font = Enum.Font.GothamBold
loadingLabel.TextSize = 32

-- Main Frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Visible = false

-- Tab Buttons
local tabHolder = Instance.new("Frame", mainFrame)
tabHolder.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
tabHolder.Size = UDim2.new(0, 150, 1, 0)
tabHolder.BorderSizePixel = 0

-- Tab Content
local contentHolder = Instance.new("Frame", mainFrame)
contentHolder.Position = UDim2.new(0, 150, 0, 0)
contentHolder.Size = UDim2.new(1, -150, 1, 0)
contentHolder.BackgroundTransparency = 1

-- UI Layouts
local tabLayout = Instance.new("UIListLayout", tabHolder)
tabLayout.Padding = UDim.new(0, 5)

-- Utility Functions
local DarkFusion = {}
DarkFusion.Tabs = {}

function DarkFusion:CreateTab(name)
    local tabButton = Instance.new("TextButton", tabHolder)
    tabButton.Text = name
    tabButton.Size = UDim2.new(1, -10, 0, 30)
    tabButton.BackgroundColor3 = Color3.fromRGB(30, 0, 50)
    tabButton.TextColor3 = Color3.new(1, 1, 1)
    tabButton.Font = Enum.Font.GothamBold
    tabButton.TextSize = 14
    tabButton.BorderSizePixel = 0

    local tabPage = Instance.new("ScrollingFrame", contentHolder)
    tabPage.Visible = false
    tabPage.BackgroundTransparency = 1
    tabPage.Size = UDim2.new(1, 0, 1, 0)
    tabPage.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabPage.ScrollBarThickness = 4
    tabPage.ScrollBarImageColor3 = Color3.fromRGB(90, 0, 150)

    local tabLayout = Instance.new("UIListLayout", tabPage)
    tabLayout.Padding = UDim.new(0, 6)

    tabButton.MouseButton1Click:Connect(function()
        for _, t in pairs(DarkFusion.Tabs) do
            t.page.Visible = false
        end
        tabPage.Visible = true
    end)

    local tab = {
        button = tabButton,
        page = tabPage,
        AddButton = function(self, text, callback)
            local btn = Instance.new("TextButton", tabPage)
            btn.Text = text
            btn.Size = UDim2.new(1, -10, 0, 30)
            btn.BackgroundColor3 = Color3.fromRGB(40, 0, 80)
            btn.TextColor3 = Color3.new(1, 1, 1)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.BorderSizePixel = 0
            btn.MouseButton1Click:Connect(callback)
        end,
        AddToggle = function(self, text, callback)
            local toggle = Instance.new("TextButton", tabPage)
            toggle.Size = UDim2.new(1, -10, 0, 30)
            toggle.BackgroundColor3 = Color3.fromRGB(40, 0, 80)
            toggle.TextColor3 = Color3.new(1, 1, 1)
            toggle.Font = Enum.Font.Gotham
            toggle.TextSize = 14
            toggle.BorderSizePixel = 0
            toggle.Text = text .. ": OFF"
            local state = false
            toggle.MouseButton1Click:Connect(function()
                state = not state
                toggle.Text = text .. ": " .. (state and "ON" or "OFF")
                callback(state)
            end)
        end,
        AddSlider = function(self, text, min, max, default, callback)
            local sliderLabel = Instance.new("TextLabel", tabPage)
            sliderLabel.Size = UDim2.new(1, -10, 0, 20)
            sliderLabel.Text = text .. ": " .. tostring(default)
            sliderLabel.TextColor3 = Color3.new(1, 1, 1)
            sliderLabel.Font = Enum.Font.Gotham
            sliderLabel.TextSize = 12
            sliderLabel.BackgroundTransparency = 1

            local slider = Instance.new("TextButton", tabPage)
            slider.Size = UDim2.new(1, -10, 0, 30)
            slider.BackgroundColor3 = Color3.fromRGB(50, 0, 100)
            slider.Text = "Drag to set"
            slider.TextColor3 = Color3.new(1, 1, 1)
            slider.Font = Enum.Font.Gotham
            slider.TextSize = 12
            slider.BorderSizePixel = 0

            local dragging = false
            slider.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            slider.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)

            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local pos = input.Position.X - slider.AbsolutePosition.X
                    local ratio = math.clamp(pos / slider.AbsoluteSize.X, 0, 1)
                    local value = math.floor(min + (max - min) * ratio)
                    sliderLabel.Text = text .. ": " .. tostring(value)
                    callback(value)
                end
            end)
        end
    }

    table.insert(DarkFusion.Tabs, tab)
    return tab
end

-- Animate loading screen out
TweenService:Create(loadingFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(loadingLabel, TweenInfo.new(1), {TextTransparency = 1}):Play()
task.wait(1.2)
loadingFrame:Destroy()
mainFrame.Visible = true

return DarkFusion
