-- DarkFusion UI Library with Lucide Icons
local DarkFusion = {}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Main UI ScreenGui
local screenGui = Instance.new("ScreenGui", PlayerGui)
screenGui.Name = "DarkFusionUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true

-- Theme colors
local backgroundColor = Color3.fromRGB(20, 20, 20)
local accentColor = Color3.fromRGB(120, 0, 255)
local white = Color3.fromRGB(255, 255, 255)

-- Helper: Rounded corners
local function roundify(obj, radius)
	local corner = Instance.new("UICorner", obj)
	corner.CornerRadius = UDim.new(0, radius or 10)
end

-- Helper: Create UI button with Lucide icon
local function createButtonWithIcon(text, iconId, callback)
	local btn = Instance.new("TextButton")
	btn.Text = text
	btn.Size = UDim2.new(1, -20, 0, 30)
	btn.BackgroundColor3 = accentColor
	btn.TextColor3 = white
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.AutoButtonColor = true
	btn.ClipsDescendants = true
	roundify(btn)

	local icon = Instance.new("ImageLabel", btn)
	icon.Size = UDim2.new(0, 20, 0, 20)
	icon.Position = UDim2.new(0, 10, 0.5, -10)
	icon.Image = "rbxassetid://" .. iconId
	icon.BackgroundTransparency = 1

	btn.MouseButton1Click:Connect(callback)
	return btn
end

-- Helper: Create toggle
function DarkFusion:CreateToggle(parent, name, callback)
	local toggle = Instance.new("TextButton", parent)
	toggle.Size = UDim2.new(1, -20, 0, 30)
	toggle.Text = "[ OFF ] " .. name
	toggle.BackgroundColor3 = backgroundColor
	toggle.TextColor3 = white
	toggle.Font = Enum.Font.Gotham
	toggle.TextSize = 14
	toggle.AutoButtonColor = false
	roundify(toggle)

	local enabled = false
	toggle.MouseButton1Click:Connect(function()
		enabled = not enabled
		toggle.Text = (enabled and "[ ON ] " or "[ OFF ] ") .. name
		callback(enabled)
	end)
end

-- Helper: Create slider
function DarkFusion:CreateSlider(parent, name, min, max, default, callback)
	local frame = Instance.new("Frame", parent)
	frame.Size = UDim2.new(1, -20, 0, 50)
	frame.BackgroundColor3 = backgroundColor
	roundify(frame)

	local label = Instance.new("TextLabel", frame)
	label.Text = name .. ": " .. tostring(default)
	label.Size = UDim2.new(1, 0, 0.4, 0)
	label.TextColor3 = white
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14

	local slider = Instance.new("Frame", frame)
	slider.Position = UDim2.new(0, 0, 0.5, 0)
	slider.Size = UDim2.new(1, 0, 0.5, -5)
	slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	roundify(slider)

	local fill = Instance.new("Frame", slider)
	fill.BackgroundColor3 = accentColor
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	fill.BorderSizePixel = 0
	fill.Name = "Fill"
	roundify(fill)

	local dragging = false
	local function updateFill(x)
		local rel = (x - slider.AbsolutePosition.X) / slider.AbsoluteSize.X
		rel = math.clamp(rel, 0, 1)
		local val = math.floor(min + (max - min) * rel)
		fill.Size = UDim2.new(rel, 0, 1, 0)
		label.Text = name .. ": " .. val
		callback(val)
	end

	slider.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			updateFill(input.Position.X)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateFill(input.Position.X)
		end
	end)
end

-- Helper: Create tab
function DarkFusion:CreateTab(name)
	local tab = Instance.new("ScrollingFrame")
	tab.Name = name
	tab.Size = UDim2.new(1, 0, 1, -60)
	tab.Position = UDim2.new(0, 0, 0, 40)
	tab.CanvasSize = UDim2.new(0, 0, 0, 0)
	tab.ScrollBarThickness = 4
	tab.BackgroundColor3 = backgroundColor
	tab.BorderSizePixel = 0
	tab.AutomaticCanvasSize = Enum.AutomaticSize.Y

	local layout = Instance.new("UIListLayout", tab)
	layout.Padding = UDim.new(0, 10)

	return tab
end

-- Main window
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.Size = UDim2.new(0, 400, 0, 400)
mainFrame.BackgroundColor3 = backgroundColor
mainFrame.BorderSizePixel = 0
roundify(mainFrame)

-- Title bar
local topBar = Instance.new("Frame", mainFrame)
topBar.Size = UDim2.new(1, 0, 0, 40)
topBar.BackgroundColor3 = accentColor
roundify(topBar)

local title = Instance.new("TextLabel", topBar)
title.Text = "DarkFusion Hub"
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextColor3 = white
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, 0, 1, 0)

-- Minimize and Close Buttons
local minimized = false

local closeBtn = createButtonWithIcon("X", "123456", function()
	screenGui:Destroy()
end)
closeBtn.Position = UDim2.new(1, -30, 0, 0)
closeBtn.Size = UDim2.new(0, 30, 1, 0)
closeBtn.Parent = topBar

local minimizeBtn = createButtonWithIcon("-", "123457", function()
	minimized = not minimized
	mainFrame.Size = minimized and UDim2.new(0, 400, 0, 40) or UDim2.new(0, 400, 0, 400)

	for _, child in ipairs(mainFrame:GetChildren()) do
		if child ~= topBar then
			child.Visible = not minimized
		end
	end
end)
minimizeBtn.Position = UDim2.new(1, -60, 0, 0)
minimizeBtn.Size = UDim2.new(0, 30, 1, 0)
minimizeBtn.Parent = topBar

-- Credits
local credits = Instance.new("TextLabel", mainFrame)
credits.Text = "Made by VoidedX"
credits.TextColor3 = white
credits.Font = Enum.Font.Gotham
credits.TextSize = 12
credits.BackgroundTransparency = 1
credits.Position = UDim2.new(0, 10, 1, -20)
credits.Size = UDim2.new(0, 200, 0, 20)
credits.TextXAlignment = Enum.TextXAlignment.Left

-- Draggable functionality
local dragging = false
local dragStart, startPos

topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- Example usage
local exampleTab = DarkFusion:CreateTab("Main")
exampleTab.Parent = mainFrame

DarkFusion:CreateToggle(exampleTab, "Example Toggle", function(state)
	print("Toggle is now", state)
end)

DarkFusion:CreateSlider(exampleTab, "Example Slider", 0, 100, 50, function(value)
	print("Slider value:", value)
end)

return DarkFusion
