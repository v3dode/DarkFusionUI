local DarkFusion = {}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DarkFusionUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = PlayerGui

-- Theme
local bgColor = Color3.fromRGB(20, 20, 20)
local accentColor = Color3.fromRGB(120, 0, 255)
local white = Color3.fromRGB(255, 255, 255)

-- Roundify
local function roundify(obj, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, radius or 10)
	corner.Parent = obj
end

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 450, 0, 400)
mainFrame.Position = UDim2.new(0.5, -225, 0.5, -200)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = bgColor
mainFrame.Parent = screenGui
roundify(mainFrame)

-- TopBar
local topBar = Instance.new("Frame", mainFrame)
topBar.Size = UDim2.new(1, 0, 0, 40)
topBar.BackgroundColor3 = accentColor
roundify(topBar)

local title = Instance.new("TextLabel", topBar)
title.Text = "DarkFusion Hub"
title.Size = UDim2.new(1, -80, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.TextColor3 = white
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local function makeButton(text, parent, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 40, 1, 0)
	btn.Text = text
	btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	btn.TextColor3 = white
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.Parent = parent
	roundify(btn)
	btn.MouseButton1Click:Connect(callback)
	return btn
end

makeButton("-", topBar, function()
	mainFrame.Visible = not mainFrame.Visible
end).Position = UDim2.new(1, -80, 0, 0)

makeButton("X", topBar, function()
	screenGui:Destroy()
end).Position = UDim2.new(1, -40, 0, 0)

-- Tab system
local tabContainer = Instance.new("Frame", mainFrame)
tabContainer.Position = UDim2.new(0, 0, 0, 40)
tabContainer.Size = UDim2.new(0, 120, 1, -40)
tabContainer.BackgroundColor3 = bgColor
roundify(tabContainer)

local contentContainer = Instance.new("Frame", mainFrame)
contentContainer.Position = UDim2.new(0, 120, 0, 40)
contentContainer.Size = UDim2.new(1, -120, 1, -40)
contentContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
roundify(contentContainer)

-- Tab logic
local tabs = {}

function DarkFusion:CreateTab(tabName)
	local tabButton = Instance.new("TextButton", tabContainer)
	tabButton.Text = tabName
	tabButton.Size = UDim2.new(1, 0, 0, 40)
	tabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	tabButton.TextColor3 = white
	tabButton.Font = Enum.Font.Gotham
	tabButton.TextSize = 14
	roundify(tabButton)

	local tabFrame = Instance.new("ScrollingFrame")
	tabFrame.Size = UDim2.new(1, -10, 1, -10)
	tabFrame.Position = UDim2.new(0, 5, 0, 5)
	tabFrame.BackgroundTransparency = 1
	tabFrame.Visible = false
	tabFrame.Parent = contentContainer
	tabFrame.CanvasSize = UDim2.new(0, 0, 5, 0)
	tabFrame.ScrollBarThickness = 4

	local layout = Instance.new("UIListLayout", tabFrame)
	layout.Padding = UDim.new(0, 6)

	tabs[tabName] = tabFrame

	tabButton.MouseButton1Click:Connect(function()
		for _, tab in pairs(tabs) do
			tab.Visible = false
		end
		tabFrame.Visible = true
	end)

	return {
		AddButton = function(_, opts)
			local b = Instance.new("TextButton", tabFrame)
			b.Size = UDim2.new(1, -10, 0, 35)
			b.BackgroundColor3 = accentColor
			b.TextColor3 = white
			b.Text = opts.Title
			b.Font = Enum.Font.Gotham
			b.TextSize = 14
			roundify(b)
			b.MouseButton1Click:Connect(opts.Callback)
		end,

		AddToggle = function(_, opts)
			local t = Instance.new("TextButton", tabFrame)
			t.Size = UDim2.new(1, -10, 0, 35)
			t.BackgroundColor3 = bgColor
			t.TextColor3 = white
			t.Text = "[ OFF ] " .. opts.Title
			t.Font = Enum.Font.Gotham
			t.TextSize = 14
			roundify(t)

			local state = opts.Default or false
			t.MouseButton1Click:Connect(function()
				state = not state
				t.Text = (state and "[ ON ] " or "[ OFF ] ") .. opts.Title
				if opts.Callback then opts.Callback(state) end
			end)
		end,

		AddSlider = function(_, opts)
			local holder = Instance.new("Frame", tabFrame)
			holder.Size = UDim2.new(1, -10, 0, 55)
			holder.BackgroundTransparency = 1

			local label = Instance.new("TextLabel", holder)
			label.Size = UDim2.new(1, 0, 0.4, 0)
			label.Position = UDim2.new(0, 0, 0, 0)
			label.TextColor3 = white
			label.Text = opts.Title .. ": " .. tostring(opts.Default)
			label.BackgroundTransparency = 1
			label.Font = Enum.Font.Gotham
			label.TextSize = 14

			local bar = Instance.new("Frame", holder)
			bar.Size = UDim2.new(1, 0, 0.4, 0)
			bar.Position = UDim2.new(0, 0, 0.6, 0)
			bar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			roundify(bar)

			local fill = Instance.new("Frame", bar)
			fill.BackgroundColor3 = accentColor
			fill.Size = UDim2.new((opts.Default - opts.Min) / (opts.Max - opts.Min), 0, 1, 0)
			fill.BorderSizePixel = 0
			fill.Name = "Fill"
			roundify(fill)

			local dragging = false

			local function updateFill(x)
				local rel = math.clamp((x - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
				fill.Size = UDim2.new(rel, 0, 1, 0)
				local val = math.floor(opts.Min + (opts.Max - opts.Min) * rel)
				label.Text = opts.Title .. ": " .. tostring(val)
				if opts.Callback then opts.Callback(val) end
			end

			bar.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					updateFill(input.Position.X)
				end
			end)

			UserInputService.InputChanged:Connect(function(input)
				if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					updateFill(input.Position.X)
				end
			end)

			UserInputService.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
		end
	}
end

return DarkFusion
